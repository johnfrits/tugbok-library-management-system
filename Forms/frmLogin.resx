<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timerPanel.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QBiRXhpZgAATU0AKgAAAAgAAgExAAIAAAAHAAAAJodpAAQAAAAB
        AAAALgAAAABHb29nbGUAAAADkAAABwAAAAQwMjIwoAIABAAAAAEAAACOoAMABAAAAAEAAACKAAAAAAAA
        /9sAQwAKBwcIBwYKCAgICwoKCw4YEA4NDQ4dFRYRGCMfJSQiHyIhJis3LyYpNCkhIjBBMTQ5Oz4+PiUu
        RElDPEg3PT47/9sAQwEKCwsODQ4cEBAcOygiKDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7
        Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7/8AAEQgAigCOAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAAB
        AgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEV
        UtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6
        g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn
        6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQH
        BQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1
        Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWm
        p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMR
        AD8A8pooorYzCiiuk8LeCtQ8SOJgDbWIPzXDL19lHc/59qAOeihknlWKGNpJHOFRFySfYCu30L4Ta5qa
        rNfsmmwtziQbpD/wEdPxIr0/w54U0rw7EBp9sN7DDzycyP8Aj/QcV0ABqHLsUkcTpvwl8M2QVrpZ75x1
        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
</value>
  </data>
</root>